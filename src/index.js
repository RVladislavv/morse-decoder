const MORSE_TABLE = {
    '.-':     'a',
    '-...':   'b',
    '-.-.':   'c',
    '-..':    'd',
    '.':      'e',
    '..-.':   'f',
    '--.':    'g',
    '....':   'h',
    '..':     'i',
    '.---':   'j',
    '-.-':    'k',
    '.-..':   'l',
    '--':     'm',
    '-.':     'n',
    '---':    'o',
    '.--.':   'p',
    '--.-':   'q',
    '.-.':    'r',
    '...':    's',
    '-':      't',
    '..-':    'u',
    '...-':   'v',
    '.--':    'w',
    '-..-':   'x',
    '-.--':   'y',
    '--..':   'z',
    '.----':  '1',
    '..---':  '2',
    '...--':  '3',
    '....-':  '4',
    '.....':  '5',
    '-....':  '6',
    '--...':  '7',
    '---..':  '8',
    '----.':  '9',
    '-----':  '0',
};

function decode(expr) {
    let res = '';
    // write your solution here
    //start
    //цель разбить строку по 10 символов, если * - значит это пробел в декодер записывать, все строки 10 символов, но сам код может быть меньше, 
    // от того надо искать первое вхождение единицы в десятку эту, нули левее просто для заполнение до 10 символов нужны
    //10 это . 11 это -
    //пример `me` -> `m === -- === 0000001111`, `e === . === 0000000010` -> `00000011110000000010`

    //нужны функции
    //1)для разбития строки по 10 символов
    //2)для обработки этих символов в азбуку морзе, чтоб либо сразу пробел давало, если "*", либо искало первую единицу и там перебирало в точки и тире
    //3)итоговые точки и тире использовать для MORSE_TABLE[strDec], чтоб вытащить букву
    //4)итоговые буквы складываем
    //5)возвращаем строку декодированную


    //1)разбитие строки по 10 символов через regexp
    let arr = expr.match(/.{1,10}/g);

    //2)перебираем каждое значение и декодируем из нулей, единиц и * в буквы и пробелы
    for(let i = 0; i < arr.length; i++) {
        //проверка на пробел и сразу добавление пробела в финальный результат
        if (arr[i][0] == '*') {
            res += ' ';
        } else {
            //тут теперь берём строку - arr[i], обрезаем нули до первой единицы
            //а далее перебором по 2 символа сверяем с 10 и 11, по итогу
            //записывая расшифровку символа и после уже возвращаем букву(см пункт 3)

            //найти через индекс оф первое вхождение 1, 
            //а после обрезать с этого места до конца строку
            //чтоб потом её перебрать
            let pos = arr[i].indexOf('1');
            let strSlice = arr[i].slice(pos);
            //временная переменная для расшифровки буквы - в неё . и - запишем
            let temp = '';
            for(let j = 0; j < strSlice.length; j = j + 2) {
                if (strSlice[j] == strSlice[j+1]) {
                    temp += '-';
                } else {
                    temp += '.';
                }
            }
            res += MORSE_TABLE[temp];
        }
    }





    return res;
}

module.exports = {
    decode
}